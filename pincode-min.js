/**
 * PinCode Class
 * 
 * A JavaScript class for creating and managing PIN code inputs.
 * 
 * @version 1.0.1
 * @author Fariborz Jafarzadeh
 * @license MIT
 * @email fariborzj2@gmail.com
 */

class pinCode{constructor(e,t){this.elementId=e.id,console.log(e),this.defaults={fields:5,placeholder:"â€¢",autofocus:!0,hideinput:!0,reset:!1,pattern:"^[0-9]*$",copypaste:!0,complete:function(e){},invalid:function(e,t){},keydown:function(e,t,s){},input:function(e,t,s){}},this.settings=Object.assign({},this.defaults,t),this.values=new Array(this.settings.fields),this.timers=[],this.createInputs(e),this.reset(),this.settings.autofocus&&this.focus(0)}createInputs(e){const t=document.createElement("div");t.id=`${this.elementId}pinContainer`,t.classList.add("pin-container");for(let e=0;e<this.settings.fields;e++){const s=this.createInput(this.getFieldId(e));this.attachEvents(s,e),t.appendChild(s)}e.appendChild(t)}createInput(e){const t=document.createElement("input");return t.id=e,t.name=e,t.type="tel",t.maxLength=1,t.inputMode="numeric",t.pattern=this.settings.pattern,t.autocomplete=!1,t.autocorrect="off",t.autocapitalize="off",t.spellcheck=!1,t.role="presentation",t.classList.add("pin-input"),t}attachEvents(e,t){const s=this;e.addEventListener("focus",(function(){this.readOnly||(this.value="")})),e.addEventListener("input",(function(e){if(!s.validateInput(t))return e.preventDefault(),void e.stopPropagation();if(s.settings.input(e,this,t),s.values[t]=this.value,t<s.settings.fields-1){if(s.settings.hideinput){t>0&&(s.getField(t-1).value=s.settings.placeholder);const e=this;s.timers.push(setTimeout((function(){e.value=s.settings.placeholder}),1e3))}s.getField(t+1).removeAttribute("readonly"),s.focus(t+1)}else{s.settings.hideinput&&(this.value=s.settings.placeholder);const e=s.values.join("");s.settings.reset&&s.reset(),s.settings.complete(e)}})),e.addEventListener("keydown",(function(e){s.timers.forEach((e=>clearTimeout(e))),s.timers=[],s.settings.keydown(e,this,t),(37===e.keyCode||8===e.keyCode)&&t>0&&(s.resetField(t),s.focus(t-1),e.preventDefault(),e.stopPropagation())})),this.settings.copypaste&&0===t&&e.addEventListener("paste",(e=>{e.stopPropagation(),e.preventDefault();const t=(e.clipboardData||window.clipboardData).getData("Text").trim();if(console.log("past number: "+t.length),t.length===this.settings.fields){let e=!0;if(s.getField(0).removeAttribute("readonly"),Array.from(t).forEach(((t,i)=>{s.getField(i).value=t,s.values[i]=t,s.validateInput(i)?i<s.settings.fields-1&&s.focus(i+1):e=!1})),e){const e=Array.from(s.values).join("");s.settings.reset&&s.reset(),s.settings.complete(e)}}}))}validateInput(e){const t=this.getField(e),s=new RegExp(t.pattern);return t.value.match(s)?(t.classList.remove("invalid"),!0):(t.value="",t.classList.add("invalid"),this.settings.invalid(t,e),!1)}getFieldId(e){return`${this.elementId}_pincode_${e}`}getField(e){return document.getElementById(this.getFieldId(e))}focus(e){this.enableField(e),this.getField(e).focus()}reset(){this.values=new Array(this.settings.fields);for(let e=0;e<this.settings.fields;e++){const t=this.getField(e);t.value="",e>0&&(t.readOnly=!0,t.classList.remove("invalid"))}this.settings.autofocus&&this.focus(0)}resetField(e){this.values[e]="";const t=this.getField(e);t.value="",t.readOnly=!0,t.classList.remove("invalid")}disable(){for(let e=0;e<this.settings.fields;e++)this.disableField(e)}disableField(e){this.getField(e).readOnly=!0}enable(){for(let e=0;e<this.settings.fields;e++)this.enableField(e)}enableField(e){this.getField(e).removeAttribute("readonly")}}
